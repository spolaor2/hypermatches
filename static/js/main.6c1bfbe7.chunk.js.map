{"version":3,"sources":["assets/train.png","App.js","reportWebVitals.js","index.js"],"names":["trainimage","require","App","state","data","View","style","styles","container","Image","source","FlatList","flex","this","renderItem","item","React","Component","Item","props","selectedImage","setState","listItem","ImageBackground","uri","photo","imageSelected","imageNotSelected","onClick","changeColor","bind","Text","paragraph","name","win","Dimensions","get","ratio","width","StyleSheet","create","backgroundColor","marginTop","alignItems","justifyContent","height","resizeMode","filter","margin","padding","alignSelf","flexDirection","borderRadius","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAAA,OAAe,cAA0B,mC,yLCGnCA,EAAaC,EAAQ,IAENC,E,4MAEnBC,MAAQ,CACNC,KAAM,CACJ,CACE,KAAQ,UACR,MAAS,wBAEX,CACE,KAAQ,QACR,MAAS,qBAEX,CACE,KAAQ,SACR,MAAS,qBAEX,CACE,KAAQ,UACR,MAAS,uBAEX,CACE,KAAQ,SACR,MAAS,sBAEX,CACE,KAAQ,OACR,MAAS,oBAEX,CACE,KAAQ,WACR,MAAS,wBAEX,CACE,KAAQ,QACR,MAAS,qBAEX,CACE,KAAQ,UACR,MAAS,yB,4CAKf,WAEE,OACE,eAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,UAApB,UACE,cAACC,EAAA,EAAD,CAAOC,OAAQV,IACf,cAACW,EAAA,EAAD,CACEL,MAAO,CAAEM,KAAM,GACfR,KAAMS,KAAKV,MAAMC,KACjBU,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OAAc,cAAC,EAAD,CAAMA,KAAMA,c,GAnDfC,IAAMC,WA0DjCC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDhB,MAAQ,CACXiB,eAAe,GAHA,E,+CAOnB,WACEP,KAAKQ,SAAS,CAAED,eAAgBP,KAAKV,MAAMiB,kB,oBAG7C,WACE,OACE,cAACf,EAAA,EAAD,CAAMC,MAAOC,EAAOe,SAApB,SACE,cAACC,EAAA,EAAD,CACEb,OAAQ,CAAEc,IAAKX,KAAKM,MAAMJ,KAAKU,OAC/BnB,MAAO,CAACO,KAAKV,MAAMiB,cAAgBb,EAAOmB,cAAgBnB,EAAOoB,kBACjEC,QAASf,KAAKgB,YAAYC,KAAKjB,MAHjC,SAIE,cAACkB,EAAA,EAAD,CAAMzB,MAAOC,EAAOyB,UAApB,SACGnB,KAAKM,MAAMJ,KAAKkB,e,GArBVjB,IAAMC,WA6BnBiB,EAAMC,IAAWC,IAAI,UAErBC,EAAQH,EAAII,MAAQ,IAEpB/B,EAASgC,IAAWC,OAAO,CAC/BhC,UAAW,CACTI,KAAM,EACN6B,gBAAiB,MACjBC,UAAW,GACXC,WAAY,UACZC,eAAgB,UAElBlB,cAAe,CACbiB,WAAY,SACZC,eAAgB,SAChBN,MAAOJ,EAAII,MAAQ,IACnBO,OAAQ,GAAKR,EACbS,WAAY,QACZC,OAAQ,mBAEVpB,iBAAkB,CAChBgB,WAAY,SACZC,eAAgB,SAChBN,MAAOJ,EAAII,MAAQ,IACnBO,OAAQ,GAAKR,EACbS,WAAY,SAEdxB,SAAU,CACR0B,OAAQ,GACRC,QAAS,EACTX,MAAO,MACP1B,KAAM,EACNsC,UAAW,SACXC,cAAe,MACfC,aAAc,EACdT,WAAY,SACZC,eAAgB,UAElBZ,UAAW,CACTqB,UAAW,SACXC,SAAU,MCxHCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c1bfbe7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/train.bc4f2f11.png\";","import './App.css';\r\nimport { View, FlatList, Text, ImageBackground, StyleSheet, Dimensions, Image } from \"react-native\";\r\nimport React from \"react\";\r\nconst trainimage = require('./assets/train.png')\r\n\r\nexport default class App extends React.Component {\r\n\r\n  state = {\r\n    data: [\r\n      {\r\n        \"name\": \"Ancient\",\r\n        \"photo\": './assets/ancient.png'\r\n      },\r\n      {\r\n        \"name\": \"Cache\",\r\n        \"photo\": '/images/cache.png'\r\n      },\r\n      {\r\n        \"name\": \"Dust 2\",\r\n        \"photo\": '/images/dust2.png'\r\n      },\r\n      {\r\n        \"name\": \"Inferno\",\r\n        \"photo\": '/images/inferno.png'\r\n      },\r\n      {\r\n        \"name\": \"Mirage\",\r\n        \"photo\": '/images/mirage.png'\r\n      },\r\n      {\r\n        \"name\": \"Nuke\",\r\n        \"photo\": '/images/nuke.png'\r\n      },\r\n      {\r\n        \"name\": \"Overpass\",\r\n        \"photo\": '/images/overpass.png'\r\n      },\r\n      {\r\n        \"name\": \"Train\",\r\n        \"photo\": '/images/train.png'\r\n      },\r\n      {\r\n        \"name\": \"Vertigo\",\r\n        \"photo\": '/images/vertigo.png'\r\n      }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        <Image source={trainimage}/>\r\n        <FlatList\r\n          style={{ flex: 1 }}\r\n          data={this.state.data}\r\n          renderItem={({ item }) => <Item item={item} />}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nclass Item extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedImage: false\r\n    }\r\n  }\r\n\r\n  changeColor() {\r\n    this.setState({ selectedImage: !this.state.selectedImage })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.listItem} >\r\n        <ImageBackground\r\n          source={{ uri: this.props.item.photo }}\r\n          style={[this.state.selectedImage ? styles.imageSelected : styles.imageNotSelected]}\r\n          onClick={this.changeColor.bind(this)} >\r\n          <Text style={styles.paragraph}>\r\n            {this.props.item.name}\r\n          </Text>\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst win = Dimensions.get('window');\r\n\r\nconst ratio = win.width / 541;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FS',\r\n    marginTop: 60,\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center'\r\n  },\r\n  imageSelected: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: win.width / 1.5,\r\n    height: 30 * ratio,\r\n    resizeMode: 'cover',\r\n    filter: \"grayscale(100%)\"\r\n  },\r\n  imageNotSelected: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: win.width / 1.5,\r\n    height: 30 * ratio,\r\n    resizeMode: 'cover',\r\n  },\r\n  listItem: {\r\n    margin: 10,\r\n    padding: 0,\r\n    width: \"80%\",\r\n    flex: 1,\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'center',\r\n    fontSize: 45\r\n  }\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}